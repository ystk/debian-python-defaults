.\" Man page generated from reStructuredText.
.
.TH DH_PYTHON2 1 "" "" ""
.SH NAME
dh_python2 \- calculates Python dependencies, adds maintainer scripts to byte compile files, etc.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
dh_python2 \-p PACKAGE [\-V [X.Y][\-][A.B]] DIR_OR_FILE [\-X REGEXPR]
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.SS QUICK GUIDE FOR MAINTAINERS
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
if necessary, describe supported Python versions via X\-Python\-Version field
in debian/control,
.IP \(bu 2
build\-depend on python or python\-all or python\-all\-dev (>= 2.6.6\-3~),
.IP \(bu 2
build module/application using its standard build system,
remember to build extensions for all supported Python versions (loop over
\fBpyversions \-vr\fP),
.IP \(bu 2
install files to the \fIstandard\fP locations, add \fI\-\-install\-layout=deb\fP to
setup.py\(aqs install command if your package is using distutils,
.IP \(bu 2
add \fIpython2\fP to dh\(aqs \-\-with option, or:
.IP \(bu 2
\fIinclude /usr/share/cdbs/1/class/python\-distutils.mk\fP in debian/rules and
depend on \fIcdbs (>= 0.4.90)\fP, or:
.IP \(bu 2
call \fBdh_python2\fP in the \fIbinary\-*\fP target,
.IP \(bu 2
add \fI${python:Depends}\fP to Depends
.UNINDENT
.UNINDENT
.UNINDENT
.SS NOTES
.sp
In order to support more than one Python version in the same binary package,
dh_python2 (unlike dh_pycentral and dh_pysupport) creates symlinks to all
supported Python versions at build time. It means binNMU (or sourceful upload
in case of architecture independent packages) is required once a list of
supported Python version is changed. It\(aqs faster and more robust than its
competitors, though.
.SS dependencies
.sp
dh_python2 tries to translate Python dependencies from requires.txt file to
Debian dependencies. Use debian/pydist\-overrides or \-\-no\-guessing\-deps option
to override it if the guess is incorrect. If you want dh_python2 to generate
more strict dependencies (f.e. to avoid ABI problems) create
debian/python\-foo.pydist file. See /usr/share/doc/python\-doc/README.PyDist
(provided by python\-doc package) for more information. If the pydist file
contains PEP386 flag or set of (uscan like) rules, dh_python2 will make the
depedency versioned (version requirements are ignored by default).
.SS namespace feature
.sp
dh_python2 parses Egg\(aqs namespace_packages.txt files (in addition to
\-\-namespace command line argument(s)) and drops empty __init__.py files from
binary package. pycompile will regenerate them at install time and pyclean
will remove them at uninstall time (if they\(aqre no longer used in installed
packages). It\(aqs still a good idea to provide __init__.py file in one of
binary packages (even if all other packages use this feature).
.SS private dirs
.sp
\fI/usr/share/foo\fP, \fI/usr/share/games/foo\fP, \fI/usr/lib/foo\fP and
\fI/usr/lib/games/foo\fP private directories are scanned for Python files
by default (where \fIfoo\fP is binary package name). If your package is shipping
Python files in some other directory, add another dh_python2 call in
debian/rules with directory name as an argument \- you can use different set of
options in this call. If you need to change options (f.e. a list of supported
Python versions) for a private directory that is checked by default, invoke
dh_python2 with \-\-skip\-private option and add another call with a path to this
directory and new options.
.SS debug packages
.sp
In binary packages which name ends with \fI\-dbg\fP, all files in
\fI/usr/lib/python2.X/{site,dist}\-packages/\fP directory
that have extensions different than \fIso\fP or \fIh\fP are removed by default.
Use \-\-no\-dbg\-cleaning option to disable this feature.
.SS pyinstall files
.sp
Files listed in debian/pkg.pyinstall file will be installed as public modules
for all requested Python versions (dh_install doesn\(aqt know about python\(aqs site\-
vs. dist\-packages issue).
.sp
Syntax: \fBpath/to/file [VERSION_RANGE] [NAMESPACE]\fP
.sp
debian directory is automatically removed from the path, so you can place your
files in debian/ directory and install them from this location (if you want to
install them in "debian" namespace, set NAMESPACE to debian). If NAMESPACE is
set, all listed files will be installed in .../dist\-packages/NAMESPACE/
directory.
.INDENT 0.0
.TP
.B Examples:
.INDENT 7.0
.IP \(bu 2
\fBfoo.py\fP installs .../dist\-packages/foo.py for all supported Python versions
.IP \(bu 2
\fBfoo/bar.py 2.6\-\fP installs .../dist\-packages/foo/bar.py for versions >= 2.6
.IP \(bu 2
\fBfoo/bar.py spam\fP installs .../dist\-packages/spam/bar.py
.IP \(bu 2
\fBdebian/*.py spam.egg 2.5\fP installs .../python2.5/site\-packages/spam/egg/*.py
files
.UNINDENT
.UNINDENT
.SS pyremove files
.sp
If you want to remove some files installed by build system (from all supported
Python versions or only from a subset of these versions), add them to
debian/pkg.pyremove file.
.INDENT 0.0
.TP
.B Examples:
.INDENT 7.0
.IP \(bu 2
\fB*.pth\fP removes .pth files from .../dist\-packages/
.IP \(bu 2
\fBbar/baz.py 2.5\fP removes .../python2.5/site\-packages/bar/baz.py
.UNINDENT
.UNINDENT
.SS overriding supported / default Python versions
.sp
If you want to override system\(aqs list of supported Python versions or the
default one (f.e. to build a package that includes symlinks for older version
of Python or compile .py files only for given interpreter version), you can do
that via \fIDEBPYTHON_SUPPORTED\fP and/or \fIDEBPYTHON_DEFAULT\fP env. variables.
.sp
Example: \fB2.5,2.7\fP limits the list of supported Python versions to Python 2.5
and Python 2.7.
.SH OPTIONS
.INDENT 0.0
.TP
.B \-\-version
show program\(aqs version number and exit
.TP
.B \-h\fP,\fB  \-\-help
show help message and exit
.TP
.B \-\-no\-guessing\-versions
disable guessing other supported Python versions
.TP
.B \-\-no\-guessing\-deps
disable guessing dependencies
.TP
.B \-\-no\-dbg\-cleaning
do not remove any files from debug packages
.TP
.B \-\-no\-shebang\-rewrite
do not rewrite shebangs
.TP
.B \-\-skip\-private
don\(aqt check private directories
.TP
.B \-v\fP,\fB  \-\-verbose
turn verbose mode on
.TP
.B \-i\fP,\fB  \-\-indep
act on architecture independent packages
.TP
.B \-a\fP,\fB  \-\-arch
act on architecture dependent packages
.TP
.B \-q\fP,\fB  \-\-quiet
be quiet
.TP
.BI \-p \ PACKAGE\fP,\fB \ \-\-package\fB= PACKAGE
act on the package named PACKAGE
.TP
.BI \-N \ NO_PACKAGE\fP,\fB \ \-\-no\-package\fB= NO_PACKAGE
do not act on the specified package
.TP
.BI \-V \ VRANGE
specify list of supported Python versions. See
pycompile(1) for examples
.TP
.BI \-X \ REGEXPR\fP,\fB \ \-\-exclude\fB= REGEXPR
exclude items that match given REGEXPR. You may
use this option multiple times to build up a list of things to exclude.
.TP
.B \-\-compile\-all
compile all files from given private directory in postinst/rtupdate
not just the ones provided by the package (i.e. do not pass the \-\-package
parameter to pycompile/pyclean)
.TP
.BI \-\-depends\fB= DEPENDS
translate given requirements into Debian dependencies
and add them to ${python:Depends}. Use it for missing items in requires.txt
.TP
.BI \-\-recommends\fB= RECOMMENDS
translate given requirements into Debian dependencies
and add them to ${python:Recommends}
.TP
.BI \-\-suggests\fB= SUGGESTS
translate given requirements into Debian dependencies
and add them to ${python:Suggests}
.TP
.B \-\-namespace
use this option (multiple time if necessary) if
namespace_packages.txt is not complete
.TP
.B \-\-ignore\-namespace
ignore Egg\(aqs namespace declaration and
\-\-namespace option. This option will disable removing (and recreating at
install time) empty __init__.py files. Removing namespace_packages.txt from
egg\-info directory has the same effect.
.TP
.B \-\-clean\-pycentral
generate maintainer script that will remove byte code
generated by python\-central helper
.TP
.BI \-\-shebang\fB= COMMAND
use given command as shebang in scripts
.TP
.B \-\-ignore\-shebangs
do not translate shebangs into Debian dependencies
.UNINDENT
.SH SEE ALSO
.INDENT 0.0
.IP \(bu 2
/usr/share/doc/python/python\-policy.txt.gz
.IP \(bu 2
/usr/share/doc/python\-doc/README.PyDist (python\-doc package)
.IP \(bu 2
pycompile(1), pyclean(1)
.IP \(bu 2
dh_python3(1), py3compile(1), py3clean(1)
.IP \(bu 2
Wiki page about converting package to dh_python2:
\fI\%http://wiki.debian.org/Python/TransitionToDHPython2\fP
.UNINDENT
.SH AUTHOR
Piotr OÅ¼arowski, 2012-2013
.\" Generated by docutils manpage writer.
.
